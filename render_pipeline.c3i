module webgpu;

distinct RenderPipeline = inline void*;


fn void RenderPipeline.getBindGroupLayout(RenderPipeline pipeline,
    CUInt groupIndex) @extern("wgpuRenderPipelineGetBindGroupLayout");

fn void RenderPipeline.setLabel(RenderPipeline pipeline,
    ZString label) @extern("wgpuRenderPipelineSetLabel");

fn void RenderPipeline.reference(RenderPipeline pipeline) @extern("wgpuRenderPipelineReference");

fn void RenderPipeline.release(RenderPipeline pipeline) @extern("wgpuRenderPipelineRelease");



struct RenderPipelineDescriptor {
    ChainedStruct* next;
    ZString label;
    PipelineLayout pipeline;
    VertexState vertex;
    PrimitiveState primitive;
    DepthStencilState* depthStencil;
    MultisampleState multisample;
    FragmentState* fragment;
}

struct VertexState {
    ChainedStruct* next;
    ShaderModule shaderModule;
    ZString entryPoint;
    usz constantCount;
    ConstantEntry* constants;
    usz bufferCount;
    VertexBufferLayout* buffers;
}

struct FragmentState {
    ChainedStruct* next;
    ShaderModule shaderModule;
    ZString entryPoint;
    usz constantCount;
    ConstantEntry* constants;
    usz targetCount;
    ColorTargetState* targets;
}

struct BlendComponent {
    BlendOperation operation;
    BlendFactor sourceFactor;
    BlendFactor destinationFactor;
}

struct PrimitiveDepthClipControl {
    ChainedStruct chain;
    Bool unclippedDepth;
}

struct PrimitiveState {
    ChainedStruct* next;
    PrimitiveTopology topology;
    IndexFormat stripIndexFormat;
    FrontFace frontFace;
    CullMode cullMode;
}


enum BlendFactor {
    ZERO,
    ONE,
    SRC,
    ONE_MINUS_SRC,
    SRC_ALPHA,
    ONE_MINUS_SRC_ALPHA,
    DST,
    ONE_MINUS_DST,
    DST_ALPHA,
    ONE_MINUS_DST_ALPHA,
    SRC_ALPHA_SATURATED,
    CONSTANT,
    ONE_MINUS_CONSTANT
}

enum BlendOperation {
    ADD,
    SUBTRACT,
    REVERSE_SUBTRACT,
    MIN,
    MAX
}

enum FrontFace {
    COUNTER_CLOCKWISE,
    CLOCKWISE
}

enum CullMode {
    NONE,
    FRONT,
    BACK
}

enum PrimitiveTopology {
    POINT_LIST,
    LINE_LIST,
    LINE_STRIP,
    TRIANGLE_LIST,
    TRIANGLE_STRIP
}
