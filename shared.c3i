module webgpu;

def Bool = CUInt;

def UserData = void*;

const UNDEFINED = ~0u;

struct Color {
    double red;
    double green;
    double blue;
    double alpha;
}

struct Extent3D {
    CUInt width;
    CUInt height;
    CUInt depthOrArrayLayers;
}

bitstruct TextureUsage: CInt {
    bool copySource;
    bool copyDestination;
    bool textureBinding;
    bool storageBinding;
    bool renderAttachment;
}


enum TextureViewDimension {
    UNDEFINED,
    SINGLE_1D,
    SINGLE_2D,
    ARRAY_2D,
    CUBE,
    CUBE_ARRAY,
    SINGLE_3D
}

enum CompareFunction {
    UNDEFINED,
    NEVER,
    LESS,
    LESS_EQUAL,
    GREATER,
    GREATER_EQUAL,
    EQUAL,
    NOT_EQUAL,
    ALWAYS
}

enum IndexFormat {
    UNDEFINED,
    UINT16,
    UINT32
}

enum TextureFormat {
    UNDEFINED,
    R8_UNORM,
    R8_SNORM,
    R8_UINT,
    R8_SINT,
    R16_UINT,
    R16_SINT,
    R16_FLOAT,
    RG8_UNORM,
    RG8_SNORM,
    RG8_UINT,
    RG8_SINT,
    R32_FLOAT,
    R32_UINT,
    R32_SINT,
    RG16_UINT,
    RG16_SINT,
    RG16_FLOAT,
    RGBA8_UNORM,
    RGBA8_UNORM_SRGB,
    RGBA8_SNORM,
    RGBA8_UINT,
    RGBA8_SINT,
    BGRA8_UNORM,
    BGRA8_UNORM_SRGB,
    RGB10_A2_UINT,
    RGB10_A2_UNORM,
    RG11_B10_UFLOAT,
    RGB9_E5_UFLOAT,
    RG32_FLOAT,
    RG32_UINT,
    RG32_SINT,
    RGBA16_UINT,
    RGBA16_SINT,
    RGBA16_FLOAT,
    RGBA32_FLOAT,
    RGBA32_UINT,
    RGBA32_SINT,
    STENCIL8,
    DEPTH16_UNORM,
    DEPTH24_PLUS,
    DEPTH24_PLUS_STENCIL8,
    DEPTH32_FLOAT,
    DEPTH32_FLOAT_STENCIL8,
    BC1_RGBAUNORM,
    BC1_RGBAUNORM_SRGB,
    BC2_RGBAUNORM,
    BC2_RGBAUNORM_SRGB,
    BC3_RGBAUNORM,
    B3_RGBAUNORM_SRGB,
    BC4_RUNORM,
    BC4_RSNORM,
    BC5_RGUNORM,
    BC5_RGSNORM,
    BC6_HRGBUFLOAT,
    BC6_HRGBFLOAT,
    BC7_RGBAUNORM,
    BC7_RGBAUNORM_SRGB,
    ETC2_RGB8_UNORM,
    ETC2_RGB8_UNORM_SRGB,
    ETC2_RGB8_A1_UNORM,
    ETC2_RGB8_A1_UNORM_SRGB,
    ETC2_RGBA8_UNORM,
    ETC2_RGBA8_UNORM_SRGB,
    EACR11_UNORM,
    EACR11_SNORM,
    EACRG11_UNORM,
    EACRG11_SNORM,
    ASTC4X4_UNORM,
    ASTC4X4_UNORM_SRGB,
    ASTC5X4_UNORM,
    ASTC5X4_UNORM_SRGB,
    ASTC5X5_UNORM,
    ASTC5X5_UNORM_SRGB,
    ASTC6X5_UNORM,
    ASTC6X5_UNORM_SRGB,
    ASTC6X6_UNORM,
    ASTC6X6_UNORM_SRGB,
    ASTC8X5_UNORM,
    ASTC8X5_UNORM_SRGB,
    ASTC8X6_UNORM,
    ASTC8X6_UNORM_SRGB,
    ASTC8X8_UNORM,
    ASTC8X8_UNORM_SRGB,
    ASTC10X5_UNORM,
    ASTC10X5_UNORM_SRGB,
    ASTC10X6_UNORM,
    ASTC10X6_UNORM_SRGB,
    ASTC10X8_UNORM,
    ASTC10X8_UNORM_SRGB,
    ASTC10X10_UNORM,
    ASTC10X10_UNORM_SRGB,
    ASTC12X10_UNORM,
    ASTC12X10_UNORM_SRGB,
    ASTC12X12_UNORM,
    ASTC12X12_UNORM_SRGB
}
