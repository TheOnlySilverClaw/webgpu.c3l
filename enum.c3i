module webgpu;

// unsorted enums, to be moved to respective files later

enum AddressMode {
    REPEAT,
    MIRROR_REPEAT,
    CLAMP_TO_EDGE,
}

enum BackendType {
    UNDEFINED,
    NULL,
    WEBGPU,
    D3_D11,
    D3_D12,
    METAL,
    VULKAN,
    OPENGL,
    OPENGL_ES
}

enum BlendFactor {
    ZERO,
    ONE,
    SRC,
    ONE_MINUS_SRC,
    SRC_ALPHA,
    ONE_MINUS_SRC_ALPHA,
    DST,
    ONE_MINUS_DST,
    DST_ALPHA,
    ONE_MINUS_DST_ALPHA,
    SRC_ALPHA_SATURATED,
    CONSTANT,
    ONE_MINUS_CONSTANT
}

enum BlendOperation {
    ADD,
    SUBTRACT,
    REVERSE_SUBTRACT,
    MIN,
    MAX
}

enum BufferBindingType {
    UNDEFINED,
    UNIFORM,
    STORAGE,
    READONLY_STORAGE
}

enum BufferMapAsyncStatus {
    SUCCESS,
    VALIDATION_ERROR,
    UNKNOWN,
    DEVICE_LOST,
    DESTROYED_BEFORE_CALLBACK,
    UNMAPPED_BEFORE_CALLBACK,
    MAPPING_ALREADY_PENDING,
    OFFSET_OUT_OF_RANGE,
    SIZE_OUT_OF_RANGE
}

enum CompareFunction {
    UNDEFINED,
    NEVER,
    LESS,
    LESS_EQUAL,
    GREATER,
    GREATER_EQUAL,
    EQUAL,
    NOT_EQUAL,
    ALWAYS
}

enum CompilationInfoRequestStatus {
    SUCCESS,
    ERROR,
    DEVICE_LOST,
    UNKNOWN
}

enum CompilationMessageType {
    ERROR,
    WARNING,
    INFO
} 

enum CompositeAlphaMode {
    AUTO,
    OPAQUE,
    PREMULTIPLIED,
    UNPREMULTIPLIED,
    INHERIT
}

enum CreatePipelineAsyncStatus {
    SUCCESS,
    VALIDATION_ERROR,
    INTERNAL_ERROR,
    DEVICE_LOST,
    DEVICE_DESTROYED,
    UNKNOWN
}

enum CullMode {
    NONE,
    FRONT,
    BACK
}

enum FilterMode {
    NEAREST,
    LINEAR
}

enum FrontFace {
    COUNTER_CLOCKWISE,
    CLOCKWISE
}

enum IndexFormat {
    UNDEFINED,
    UINT16,
    UINT32
}

enum LoadOperation {
    UNDEFINED,
    CLEAR,
    LOAD
}

enum MipmapFilterMode {
    NEAREST,
    LINEAR
}

enum PowerPreference {
    UNDEFINED,
    LOW_POWER,
    HIGH_PERFORMANCE
}

enum PresentMode {
    FIFO,
    FIFO_RELAXED,
    IMMEDIATE,
    MAILBOX
}

enum PrimitiveTopology {
    POINT_LIST,
    LINE_LIST,
    LINE_STRIP,
    TRIANGLE_LIST,
    TRIANGLE_STRIP
}

enum QueueWorkDoneStatus {
    SUCCESS,
    ERROR,
    UNKNOWN,
    DEVICE_LOST
}

enum SamplerBindingType {
    UNDEFINED,
    FILTERING,
    NON_FILTERING,
    COMPARISON
}

enum StencilOperation {
    KEEP,
    ZERO,
    REPLACE,
    INVERT,
    INCREMENT_CLAMP,
    DECREMENT_CLAMP,
    INCREMENT_WRAP,
    DECREMENT_WRAP
}

enum StorageTextureAccess {
    UNDEFINED,
    WRITE_ONLY,
    READ_ONLY,
    READ_WRITE
}

enum StoreOperation {
    UNDEFINED,
    STORE,
    DISCARD
}

enum TextureAspect {
    ALL,
    STENCIL_ONLY,
    DEPTH_ONLY
}

 enum TextureFormat {
    UNDEFINED,
    R8_UNORM,
    R8_SNORM,
    R8_UINT,
    R8_SINT,
    R16_UINT,
    R16_SINT,
    R16_FLOAT,
    RG8_UNORM,
    RG8_SNORM,
    RG8_UINT,
    RG8_SINT,
    R32_FLOAT,
    R32_UINT,
    R32_SINT,
    RG16_UINT,
    RG16_SINT,
    RG16_FLOAT,
    RGBA8_UNORM,
    RGBA8_UNORM_SRGB,
    RGBA8_SNORM,
    RGBA8_UINT,
    RGBA8_SINT,
    BGRA8_UNORM,
    BGRA8_UNORM_SRGB,
    RGB10_A2_UINT,
    RGB10_A2_UNORM,
    RG11_B10_UFLOAT,
    RGB9_E5_UFLOAT,
    RG32_FLOAT,
    RG32_UINT,
    RG32_SINT,
    RGBA16_UINT,
    RGBA16_SINT,
    RGBA16_FLOAT,
    RGBA32_FLOAT,
    RGBA32_UINT,
    RGBA32_SINT,
    STENCIL8,
    DEPTH16_UNORM,
    DEPTH24_PLUS,
    DEPTH24_PLUS_STENCIL8,
    DEPTH32_FLOAT,
    DEPTH32_FLOAT_STENCIL8,
    BC1_RGBAUNORM,
    BC1_RGBAUNORM_SRGB,
    BC2_RGBAUNORM,
    BC2_RGBAUNORM_SRGB,
    BC3_RGBAUNORM,
    B3_RGBAUNORM_SRGB,
    BC4_RUNORM,
    BC4_RSNORM,
    BC5_RGUNORM,
    BC5_RGSNORM,
    BC6_HRGBUFLOAT,
    BC6_HRGBFLOAT,
    BC7_RGBAUNORM,
    BC7_RGBAUNORM_SRGB,
    ETC2_RGB8_UNORM,
    ETC2_RGB8_UNORM_SRGB,
    ETC2_RGB8_A1_UNORM,
    ETC2_RGB8_A1_UNORM_SRGB,
    ETC2_RGBA8_UNORM,
    ETC2_RGBA8_UNORM_SRGB,
    EACR11_UNORM,
    EACR11_SNORM,
    EACRG11_UNORM,
    EACRG11_SNORM,
    ASTC4X4_UNORM,
    ASTC4X4_UNORM_SRGB,
    ASTC5X4_UNORM,
    ASTC5X4_UNORM_SRGB,
    ASTC5X5_UNORM,
    ASTC5X5_UNORM_SRGB,
    ASTC6X5_UNORM,
    ASTC6X5_UNORM_SRGB,
    ASTC6X6_UNORM,
    ASTC6X6_UNORM_SRGB,
    ASTC8X5_UNORM,
    ASTC8X5_UNORM_SRGB,
    ASTC8X6_UNORM,
    ASTC8X6_UNORM_SRGB,
    ASTC8X8_UNORM,
    ASTC8X8_UNORM_SRGB,
    ASTC10X5_UNORM,
    ASTC10X5_UNORM_SRGB,
    ASTC10X6_UNORM,
    ASTC10X6_UNORM_SRGB,
    ASTC10X8_UNORM,
    ASTC10X8_UNORM_SRGB,
    ASTC10X10_UNORM,
    ASTC10X10_UNORM_SRGB,
    ASTC12X10_UNORM,
    ASTC12X10_UNORM_SRGB,
    ASTC12X12_UNORM,
    ASTC12X12_UNORM_SRGB
}

enum TextureSampleType {
    UNDEFINED,
    FLOAT,
    UNFILTERABLE_FLOAT,
    DEPTH,
    SINT,
    UINT
}



enum VertexFormat {
    UNDEFINED,
    UINT_8X2,
    UINT_8X4,
    SINT_8X2,
    SINT_8X4,
    UNORM_8X2,
    UNORM_8X4,
    SNORM_8X2,
    SNORM_8X4,
    UINT_16X2,
    UINT_16X4,
    SINT_16X2,
    SINT_16X4,
    UNORM_16X2,
    UNORM_16X4,
    SNORM_16X2,
    SNORM_16X4,
    FLOAT_16X2,
    FLOAT_16X4,
    FLOAT_32,
    FLOAT_32X2,
    FLOAT_32X3,
    FLOAT_32X4,
    UINT_32,
    UINT_32X2,
    UINT_32X3,
    UINT_32X4,
    SINT_32,
    SINT_32X2,
    SINT_32X3,
    SINT_32X4
}

enum VertexStepMode {
    VERTEX,
    INSTANCE,
    VERTEX_BUFFER_NOT_USED
}

enum WgslFeatureName {
    UNDEFINED,
    READONLY_AND_READWRITE_STORAGE_TEXTURES,
    PACKED_4X8_INTEGER_DOT_PRODUCT,
    UNRESTRICTED_POINTER_PARAMETERS,
    POINTER_COMPOSITE_ACCESS
}

enum BufferUsage {
    NONE,
    MAP_READ,
    MAP_WRITE,
    COPY_SOURCE,
    COPY_DESTINATION,
    INDEX,
    VERTEX,
    UNIFORM,
    STORAGE,
    INDIRECT,
    QUERY_RESOLVE
}

struct ColorWriteMask /*: CUInt */ {
    bool red;
    bool green;
    bool blue;
    bool alpha;
}

enum ShaderStage {
    NONE,
    VERTEX,
    FRAGMENT,
    COMPUTE
}

enum TextureUsage {
    NONE,
    COPY_SOURCE,
    COPY_DESTINATION,
    TEXTURE_BINDING,
    STORAGE_BINDING,
    RENDER_ATTACHMENT
}

