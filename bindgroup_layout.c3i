module webgpu;

distinct BindGroupLayout = inline void*;

fn void BindGroupLayout.setLabel(BindGroupLayout layout, ZString label) @extern("wgpuBindGroupLayoutSetLabel");

fn void BindGroupLayout.reference(BindGroupLayout layout) @extern("wgpuBindGroupLayoutReference");

fn void BindGroupLayout.release(BindGroupLayout layout) @extern("wgpuBindGroupLayoutRelease");


struct BindGroupLayoutDescriptor {
    ChainedStruct* next;
    ZString label;
    usz entryCount;
    BindGroupLayoutEntry* entries;
}

struct BindGroupLayoutEntry {
    ChainedStruct* next;
    CUInt binding;
    ShaderStageFlags visibility;
    BufferBindingLayout buffer;
    SamplerBindingLayout sampler;
    TextureBindingLayout texture;
    StorageTextureBindingLayout storageTexture;
}

struct TextureBindingLayout {
    ChainedStruct* next;
    TextureSampleType sampleType;
    TextureViewDimension viewDimension;
    Bool multisampled;
}